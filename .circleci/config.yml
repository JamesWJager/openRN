# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-jvascript/ for more details
#

defaults: &defaults
  docker:
    # Choose the version of Node you want here
    - image: cimg/node:18.17.1
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_ACCESS_TOKEN
  working_directory: /mnt/ramdisk/repo

version: 2.1
jobs:
  tests:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install bun
          command: curl -fsSL https://bun.sh/install | bash -s -- bun-v1.0.10
      - run:
          name: Link bun
          command: sudo ln -s ~/.bun/bin/bun /usr/local/bin/
      - restore_cache:
          name: Restore node modules
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ arch }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          name: Save node modules
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{ arch }}
      - run:
          # We don't want to install CocoaPods on ubuntu where we run the tests.
          name: Set up dummy `pod` command
          command: |
            sudo ln /bin/true /usr/local/bin/pod
      - run:
          name: Ensure git user is configured
          command: |
            git config --global user.email "james.jager@fusionary.com"
            git config --global user.name "JamesWJager"
      - restore_cache:
          name: Restore openRN dependency cache
          key: openRN_deps-cache-{{ .Environment.OPENRN_DEPS_PACKAGER }}-{{ checksum "boilerplate/package.json" }}-{{ arch }}-{{ .Environment.OPEN_RN_DEPS_KEY_SUFFIX }}
      - run:
          name: Run static tests
          command: yarn format:check && yarn lint && yarn typecheck
      - run:
          name: Run jest tests
          command: yarn test
          no_output_timeout: 5m
      - save_cache:
          name: Save openRN dependency cache
          paths:
            - ~/.cache/openRN
          key: open_RN_deps-cache-{{ .Environment.OPENRN_DEPS_PACKAGER }}-{{ checksum "boilerplate/package.json" }}-{{ arch }}-{{ .Environment.OPENRN_DEPS_KEY_SUFFIX }}

  publish:
    <<: *defaults
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - restore_cache:
          name: Restore node modules
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ arch }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Build package
          command: yarn build
      # Run semantic-release after all the above is set.
      - run:
          name: Publish to npm
          command: yarn ci:publish # this will be added to your package.json scripts

workflows:
  test_and_release:
    jobs:
      - tests
      - publish:
          context: openRN-npm-package
          requires:
            - tests
          filters:
            branches:
              only: master
